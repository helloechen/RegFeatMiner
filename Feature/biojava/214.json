{"repository":"biojava","prod_path":"biojava3-structure-gui/src/main/java/org/biojava3/structure/gui/OpenAstexViewerImpl.java","test_path":"biojava3-structure-gui/src/test/java/org/biojava/structure/gui/OpenAstexViewerImplTest.java","prod_time":"2015-01-30 05:32:57","test_time":"","type":"","proType":"EDIT","add_annotation_line":0,"add_call_line":0,"add_classname_line":0,"add_condition_line":0,"add_field_line":0,"add_import_line":0,"add_packageid_line":0,"add_parameter_line":0,"add_return_line":0,"del_annotation_line":0,"del_call_line":0,"del_classname_line":0,"del_condition_line":0,"del_field_line":0,"del_import_line":0,"del_packageid_line":0,"del_parameter_line":0,"del_return_line":0,"label":"NEGATIVE","prod_commitID":"f5f987b5ce9c95446de64d07921aa80b3808d05c","test_commitID":"","isfound":"not found test change","originPro":"///*\n// * To change this template, choose Tools | Templates\n// * and open the template in the editor.\n// */\n//package org.biojava3.structure.gui;\n//\n//import astex.MoleculeRenderer;\n//import astex.MoleculeViewer;\n//import astex.splitter.SplitterBar;\n//import astex.splitter.SplitterLayout;\n//import java.awt.BorderLayout;\n//import java.awt.Color;\n//import java.awt.FlowLayout;\n//import java.awt.Frame;\n//import java.awt.Label;\n//import java.awt.Panel;\n//import java.awt.TextField;\n//import org.biojava.bio.structure.Structure;\n//\n///**\n// *\n// * @author Jules\n// */\n//public class OpenAstexViewerImpl implements StructureViewer {\n//\n//    private MoleculeViewer moleculeViewer;\n//    private MoleculeRenderer renderer;\n//\n//    @SuppressWarnings(\"static-access\")\n//    public OpenAstexViewerImpl() {\n//\n//        Frame frame = new Frame();\n//        frame.setLayout(new BorderLayout());\n//\n//        moleculeViewer = new MoleculeViewer();\n//        frame.setLayout(new BorderLayout());\n//\n//        moleculeViewer = new MoleculeViewer();\n//\n//        moleculeViewer.setApplication(true);\n//\n//        frame.addWindowListener(moleculeViewer);\n//\n//        if (false) {\n//            moleculeViewer.setUsePopupMenu(true);\n//            moleculeViewer.createMenuBar();\n//        } else {\n//            frame.setMenuBar(moleculeViewer.createMenuBar());\n//        }\n//\n//\n//        frame.setLayout(new SplitterLayout(SplitterLayout.HORIZONTAL));\n//\n//        frame.add(\"3\", moleculeViewer);\n//        SplitterBar sb = new SplitterBar();\n//\n//        frame.add(sb);\n//\n//        frame.add(\"1\", new Panel());\n//\n//        frame.pack();\n//        frame.setVisible(true);\n//\n//    }\n//\n//    public void setStructure(Structure structure) {\n//        moleculeViewer.loadMolecule(structure.toPDB());\n//        moleculeViewer.repaint();\n//\n//    }\n//\n//    public void repaint() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setSelection(Selection selection) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public Selection getSelection() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setColor(Color red) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public Color getColor() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setStyle(RenderStyle wireframe) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void clear() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setZoom(int i) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//}\n","changedPro":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n */\n///*\n// * To change this template, choose Tools | Templates\n// * and open the template in the editor.\n// */\n//package org.biojava3.structure.gui;\n//\n//import astex.MoleculeRenderer;\n//import astex.MoleculeViewer;\n//import astex.splitter.SplitterBar;\n//import astex.splitter.SplitterLayout;\n//import java.awt.BorderLayout;\n//import java.awt.Color;\n//import java.awt.FlowLayout;\n//import java.awt.Frame;\n//import java.awt.Label;\n//import java.awt.Panel;\n//import java.awt.TextField;\n//import org.biojava.bio.structure.Structure;\n//\n///**\n// *\n// * @author Jules\n// */\n//public class OpenAstexViewerImpl implements StructureViewer {\n//\n//    private MoleculeViewer moleculeViewer;\n//    private MoleculeRenderer renderer;\n//\n//    @SuppressWarnings(\"static-access\")\n//    public OpenAstexViewerImpl() {\n//\n//        Frame frame = new Frame();\n//        frame.setLayout(new BorderLayout());\n//\n//        moleculeViewer = new MoleculeViewer();\n//        frame.setLayout(new BorderLayout());\n//\n//        moleculeViewer = new MoleculeViewer();\n//\n//        moleculeViewer.setApplication(true);\n//\n//        frame.addWindowListener(moleculeViewer);\n//\n//        if (false) {\n//            moleculeViewer.setUsePopupMenu(true);\n//            moleculeViewer.createMenuBar();\n//        } else {\n//            frame.setMenuBar(moleculeViewer.createMenuBar());\n//        }\n//\n//\n//        frame.setLayout(new SplitterLayout(SplitterLayout.HORIZONTAL));\n//\n//        frame.add(\"3\", moleculeViewer);\n//        SplitterBar sb = new SplitterBar();\n//\n//        frame.add(sb);\n//\n//        frame.add(\"1\", new Panel());\n//\n//        frame.pack();\n//        frame.setVisible(true);\n//\n//    }\n//\n//    public void setStructure(Structure structure) {\n//        moleculeViewer.loadMolecule(structure.toPDB());\n//        moleculeViewer.repaint();\n//\n//    }\n//\n//    public void repaint() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setSelection(Selection selection) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public Selection getSelection() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setColor(Color red) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public Color getColor() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setStyle(RenderStyle wireframe) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void clear() {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//\n//    public void setZoom(int i) {\n//        throw new UnsupportedOperationException(\"Not supported yet.\");\n//    }\n//}\n","originTest":"///*\n// *                  BioJava development code\n// *\n// * This code may be freely distributed and modified under the\n// * terms of the GNU Lesser General Public Licence.  This should\n// * be distributed with the code.  If you do not have a copy,\n// * see:\n// *\n// *      http://www.gnu.org/copyleft/lesser.html\n// *\n// * Copyright for this code is held jointly by the individual\n// * authors.  These should be listed in @author doc comments.\n// *\n// * For more information on the BioJava project and its aims,\n// * or to join the biojava-l mailing list, visit the home page\n// * at:\n// *\n// *      http://www.biojava.org/\n// *\n// * Created on Jan 19, 2010\n// *\n// */\n//package org.biojava.structure.gui;\n//\n//import java.awt.Color;\n//import java.io.File;\n//import junit.framework.TestCase;\n//import org.biojava.bio.structure.Structure;\n//import org.biojava.bio.structure.io.PDBFileParser;\n//import org.biojava.bio.structure.io.PDBFileReader;\n//import org.biojava3.structure.gui.OpenAstexViewerImpl;\n//import org.biojava3.structure.gui.RenderStyle;\n//import org.biojava3.structure.gui.Selection;\n//import org.biojava3.structure.gui.StructureViewer;\n//\n//\n///**\n// *\n// * @author Jules Jacobsen\n// */\n//public class OpenAstexViewerImplTest extends TestCase {\n//\n//    Structure structure;\n//    StructureViewer instance;\n//\n//    public OpenAstexViewerImplTest(String testName) {\n//        super(testName);\n//    }\n//\n//    @Override\n//    protected void setUp() throws Exception {\n//        instance = new OpenAstexViewerImpl();\n//        PDBFileReader pdbr = new PDBFileReader();\n//        pdbr.setAutoFetch(true);\n////        pdbr.setPath(\"/Users/andreas/WORK/PDB/\");\n//\n//        String pdbCode = \"5pti\";\n//\n//        structure = pdbr.getStructureById(pdbCode);\n//    }\n//\n//    @Override\n//    protected void tearDown() throws Exception {\n//        instance.clear();\n//    }\n//\n//    /**\n//     * Test of setStructure method, of class OpenAstexViewerImpl.\n//     */\n//    public void testSetStructure() {\n//        System.out.println(\"setStructure\");\n//        instance.setStructure(structure);\n//        //assertTrue(instance.);\n//    }\n//\n//    /**\n//     * Test of repaint method, of class OpenAstexViewerImpl.\n//     */\n//    public void testRepaint() {\n//        System.out.println(\"repaint\");\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.repaint();\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of setSelection method, of class OpenAstexViewerImpl.\n//     */\n//    public void testSetSelection() {\n//        System.out.println(\"setSelection\");\n//        Selection selection = null;\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.setSelection(selection);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of getSelection method, of class OpenAstexViewerImpl.\n//     */\n//    public void testGetSelection() {\n//        System.out.println(\"getSelection\");\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        Selection expResult = null;\n//        Selection result = instance.getSelection();\n//        assertEquals(expResult, result);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of setColor method, of class OpenAstexViewerImpl.\n//     */\n//    public void testSetColor() {\n//        System.out.println(\"setColor\");\n//        Color red = null;\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.setColor(red);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of getColor method, of class OpenAstexViewerImpl.\n//     */\n//    public void testGetColor() {\n//        System.out.println(\"getColor\");\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        Color expResult = null;\n//        Color result = instance.getColor();\n//        assertEquals(expResult, result);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of setStyle method, of class OpenAstexViewerImpl.\n//     */\n//    public void testSetStyle() {\n//        System.out.println(\"setStyle\");\n//        RenderStyle wireframe = null;\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.setStyle(wireframe);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of clear method, of class OpenAstexViewerImpl.\n//     */\n//    public void testClear() {\n//        System.out.println(\"clear\");\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.clear();\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//    /**\n//     * Test of setZoom method, of class OpenAstexViewerImpl.\n//     */\n//    public void testSetZoom() {\n//        System.out.println(\"setZoom\");\n//        int i = 0;\n//        OpenAstexViewerImpl instance = new OpenAstexViewerImpl();\n//        instance.setZoom(i);\n//        // TODO review the generated test code and remove the default call to fail.\n//        fail(\"The test case is a prototype.\");\n//    }\n//\n//}\n","changedTest":"","commitMessage":"Adding license statement to all java files\n","test_commitMessage":"","allZero":true}