{"repository":"biojava","prod_path":"biojava-core/src/main/java/org/biojava/nbio/core/alignment/SimpleProfilePair.java","test_path":"biojava-alignment/src/test/java/org/biojava/nbio/alignment/SimpleProfilePairTest.java","prod_time":"2015-09-16 22:43:32","test_time":"2015-09-16 22:43:32","type":"EDIT","proType":"RENAME","add_annotation_line":0,"add_call_line":0,"add_classname_line":0,"add_condition_line":0,"add_field_line":0,"add_import_line":4,"add_packageid_line":1,"add_parameter_line":0,"add_return_line":0,"del_annotation_line":0,"del_call_line":0,"del_classname_line":0,"del_condition_line":0,"del_field_line":0,"del_import_line":4,"del_packageid_line":1,"del_parameter_line":0,"del_return_line":0,"label":"POSITIVE","prod_commitID":"5ad3cc9e93ee928561a4423a0ac9a3835370b1b7","test_commitID":"5ad3cc9e93ee928561a4423a0ac9a3835370b1b7","isfound":"found test change","originPro":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n * Created on June 22, 2010\n * Author: Mark Chapman\n */\n\npackage org.biojava.nbio.alignment;\n\nimport org.biojava.nbio.alignment.template.AlignedSequence;\nimport org.biojava.nbio.alignment.template.AlignedSequence.Step;\nimport org.biojava.nbio.alignment.template.Profile;\nimport org.biojava.nbio.alignment.template.ProfilePair;\nimport org.biojava.nbio.core.sequence.template.Compound;\nimport org.biojava.nbio.core.sequence.template.Sequence;\n\nimport java.util.List;\n\n/**\n * Implements a data structure for the results of the alignment of a pair of {@link Profile}s.\n *\n * @author Mark Chapman\n * @param <S> each element of an alignment {@link Profile} is of type S\n * @param <C> each element of an {@link AlignedSequence} is a {@link Compound} of type C\n */\npublic class SimpleProfilePair<S extends Sequence<C>, C extends Compound> extends SimpleProfile<S, C>\n        implements ProfilePair<S, C> {\n\n    private Profile<S, C> query, target;\n\n    /**\n     * Creates a pair profile for the given profiles.\n     *\n     * @param query the first profile of the pair\n     * @param target the second profile of the pair\n     * @param sx lists whether the query profile aligns a {@link Compound} or gap at each index of the alignment\n     * @param sy lists whether the target profile aligns a {@link Compound} or gap at each index of the alignment\n     * @throws IllegalArgumentException if alignments differ in size or given profiles do not fit in alignments\n     */\n    public SimpleProfilePair(Profile<S, C> query, Profile<S, C> target, List<Step> sx, List<Step> sy) {\n        super(query, target, sx, sy);\n        this.query = query;\n        this.target = target;\n    }\n\n    @Override\n    public Profile<S, C> getQuery() {\n        return query;\n    }\n\n    @Override\n    public Profile<S, C> getTarget() {\n        return target;\n    }\n\n}\n","changedPro":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n * Created on June 22, 2010\n * Author: Mark Chapman\n */\n\npackage org.biojava.nbio.core.alignment;\n\nimport org.biojava.nbio.core.alignment.template.AlignedSequence;\nimport org.biojava.nbio.core.alignment.template.AlignedSequence.Step;\nimport org.biojava.nbio.core.alignment.template.Profile;\nimport org.biojava.nbio.core.alignment.template.ProfilePair;\nimport org.biojava.nbio.core.sequence.template.Compound;\nimport org.biojava.nbio.core.sequence.template.Sequence;\n\nimport java.util.List;\n\n/**\n * Implements a data structure for the results of the alignment of a pair of {@link Profile}s.\n *\n * @author Mark Chapman\n * @author Paolo Pavan\n * @param <S> each element of an alignment {@link Profile} is of type S\n * @param <C> each element of an {@link AlignedSequence} is a {@link Compound} of type C\n */\npublic class SimpleProfilePair<S extends Sequence<C>, C extends Compound> extends SimpleProfile<S, C>\n        implements ProfilePair<S, C> {\n\n    private Profile<S, C> query, target;\n\n    /**\n     * Creates a pair profile for the given profiles.\n     *\n     * @param query the first profile of the pair\n     * @param target the second profile of the pair\n     * @param sx lists whether the query profile aligns a {@link Compound} or gap at each index of the alignment\n     * @param sy lists whether the target profile aligns a {@link Compound} or gap at each index of the alignment\n     * @throws IllegalArgumentException if alignments differ in size or given profiles do not fit in alignments\n     */\n    public SimpleProfilePair(Profile<S, C> query, Profile<S, C> target, List<Step> sx, List<Step> sy) {\n        super(query, target, sx, sy);\n        this.query = query;\n        this.target = target;\n    }\n\n    @Override\n    public Profile<S, C> getQuery() {\n        return query;\n    }\n\n    @Override\n    public Profile<S, C> getTarget() {\n        return target;\n    }\n\n}\n","originTest":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n * Created on June 29, 2010\n * Author: Mark Chapman\n */\n\npackage org.biojava.nbio.alignment;\n\nimport org.biojava.nbio.alignment.template.AlignedSequence.Step;\nimport org.biojava.nbio.alignment.template.GapPenalty;\nimport org.biojava.nbio.alignment.template.Profile;\nimport org.biojava.nbio.alignment.template.ProfilePair;\nimport org.biojava.nbio.alignment.template.SubstitutionMatrix;\nimport org.biojava.nbio.core.exceptions.CompoundNotFoundException;\nimport org.biojava.nbio.core.sequence.ProteinSequence;\nimport org.biojava.nbio.core.sequence.compound.AminoAcidCompound;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport java.util.Arrays;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class SimpleProfilePairTest {\n\n    private ProteinSequence protein1, protein2, protein3, protein4;\n    private GapPenalty gaps;\n    private SubstitutionMatrix<AminoAcidCompound> blosum62;\n    private Profile<ProteinSequence, AminoAcidCompound> pair1, pair2;\n\n    @Before\n    public void setup() throws CompoundNotFoundException { \n        protein1 = new ProteinSequence(\"ARND\");\n        protein2 = new ProteinSequence(\"ARND\");\n        protein3 = new ProteinSequence(\"HILK\");\n        protein4 = new ProteinSequence(\"ANDR\");\n        gaps = new SimpleGapPenalty((short) 2, (short) 1);\n        blosum62 = SubstitutionMatrixHelper.getBlosum62();\n        pair1 = new NeedlemanWunsch<ProteinSequence, AminoAcidCompound>(protein1, protein2, gaps, blosum62).getPair();\n        pair2 = new NeedlemanWunsch<ProteinSequence, AminoAcidCompound>(protein3, protein4, gaps, blosum62).getPair();\n    }\n\n    @Test\n    public void testSimpleProfilePair() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.toString(), String.format(\"ARND--%nARND--%n--HILK%nA-ND-R%n\"));\n    }\n\n    @Test\n    public void testGetQuery() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.getQuery(), pair1);\n    }\n\n    @Test\n    public void testGetTarget() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.getTarget(), pair2);\n    }\n\n}\n","changedTest":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n * Created on June 29, 2010\n * Author: Mark Chapman\n */\n\npackage org.biojava.nbio.alignment;\n\nimport org.biojava.nbio.core.alignment.SimpleProfilePair;\nimport org.biojava.nbio.core.alignment.template.AlignedSequence.Step;\nimport org.biojava.nbio.alignment.template.GapPenalty;\nimport org.biojava.nbio.core.alignment.template.Profile;\nimport org.biojava.nbio.core.alignment.template.ProfilePair;\nimport org.biojava.nbio.core.alignment.template.SubstitutionMatrix;\nimport org.biojava.nbio.core.exceptions.CompoundNotFoundException;\nimport org.biojava.nbio.core.sequence.ProteinSequence;\nimport org.biojava.nbio.core.sequence.compound.AminoAcidCompound;\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport java.util.Arrays;\nimport org.biojava.nbio.alignment.NeedlemanWunsch;\nimport org.biojava.nbio.alignment.SimpleGapPenalty;\nimport org.biojava.nbio.core.alignment.SimpleProfilePair;\nimport org.biojava.nbio.core.alignment.matrices.SubstitutionMatrixHelper;\n\nimport static org.junit.Assert.assertEquals;\n\npublic class SimpleProfilePairTest {\n\n    private ProteinSequence protein1, protein2, protein3, protein4;\n    private GapPenalty gaps;\n    private SubstitutionMatrix<AminoAcidCompound> blosum62;\n    private Profile<ProteinSequence, AminoAcidCompound> pair1, pair2;\n\n    @Before\n    public void setup() throws CompoundNotFoundException { \n        protein1 = new ProteinSequence(\"ARND\");\n        protein2 = new ProteinSequence(\"ARND\");\n        protein3 = new ProteinSequence(\"HILK\");\n        protein4 = new ProteinSequence(\"ANDR\");\n        gaps = new SimpleGapPenalty((short) 2, (short) 1);\n        blosum62 = SubstitutionMatrixHelper.getBlosum62();\n        pair1 = new NeedlemanWunsch<ProteinSequence, AminoAcidCompound>(protein1, protein2, gaps, blosum62).getPair();\n        pair2 = new NeedlemanWunsch<ProteinSequence, AminoAcidCompound>(protein3, protein4, gaps, blosum62).getPair();\n    }\n\n    @Test\n    public void testSimpleProfilePair() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.toString(), String.format(\"ARND--%nARND--%n--HILK%nA-ND-R%n\"));\n    }\n\n    @Test\n    public void testGetQuery() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.getQuery(), pair1);\n    }\n\n    @Test\n    public void testGetTarget() {\n        ProfilePair<ProteinSequence, AminoAcidCompound> all =\n                new SimpleProfilePair<ProteinSequence, AminoAcidCompound>(pair1, pair2, Arrays.asList(new Step[] {\n                Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.GAP, Step.GAP}), Arrays.asList(\n                new Step[] {Step.COMPOUND, Step.GAP, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND, Step.COMPOUND}));\n        assertEquals(all.getTarget(), pair2);\n    }\n\n}\n","commitMessage":"Massive refactoring: moved alignment data structures from biojava-alignment to biojava-core.\nMantaining main biological data structures in core will help to avoid problems of unwanted dependency. Unfortunately the substitution matrices related classes are tight coupled with SimpleSequencePair class and were moved too from alignment.\n\nUpdated pom file to remove dependency of core from alignment module temporary added by first implementation of SearchIO.\n","test_commitMessage":"Massive refactoring: moved alignment data structures from biojava-alignment to biojava-core.\nMantaining main biological data structures in core will help to avoid problems of unwanted dependency. Unfortunately the substitution matrices related classes are tight coupled with SimpleSequencePair class and were moved too from alignment.\n\nUpdated pom file to remove dependency of core from alignment module temporary added by first implementation of SearchIO.\n","allZero":false}