{"repository":"biojava","prod_path":"biojava3-structure-gui/src/main/java/org/biojava3/structure/gui/StructureViewer.java","test_path":"biojava3-structure-gui/src/test/java/org/biojava/structure/gui/StructureViewerTest.java","prod_time":"2015-01-30 05:32:57","test_time":"2015-01-30 05:32:57","type":"EDIT","proType":"EDIT","add_annotation_line":0,"add_call_line":0,"add_classname_line":0,"add_condition_line":0,"add_field_line":0,"add_import_line":0,"add_packageid_line":0,"add_parameter_line":0,"add_return_line":0,"del_annotation_line":0,"del_call_line":0,"del_classname_line":0,"del_condition_line":0,"del_field_line":0,"del_import_line":0,"del_packageid_line":0,"del_parameter_line":0,"del_return_line":0,"label":"POSITIVE","prod_commitID":"f5f987b5ce9c95446de64d07921aa80b3808d05c","test_commitID":"f5f987b5ce9c95446de64d07921aa80b3808d05c","isfound":"found test change","originPro":"package org.biojava3.structure.gui;\n\nimport java.awt.Color;\n\nimport org.biojava.bio.structure.Structure;\n\npublic interface StructureViewer {\n\n\tpublic void setStructure(Structure structure);\n\tpublic void repaint();\n\tpublic void setSelection(Selection selection);\n\tpublic Selection getSelection();\n\t\n\t/** Apply this color to the current Selection\n\t * \n\t * @param red\n\t */\n\tpublic void setColor(Color red);\n\tpublic Color getColor();\n\t\n\t\n\t/** Apply this style to the current selection\n\t * \n\t * @param wireframe renderstyle\n\t */\n\tpublic void setStyle(RenderStyle wireframe);\n\t\n\t/** Clear the current display\n\t * \n\t * \n\t */\n\tpublic void clear();\n\t\n\t/** Set the Zoom level\n\t * \n\t * @param i\n\t */\n\tpublic void setZoom(int i);\n\t\n}\n","changedPro":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n */\npackage org.biojava3.structure.gui;\n\nimport java.awt.Color;\n\nimport org.biojava.bio.structure.Structure;\n\npublic interface StructureViewer {\n\n\tpublic void setStructure(Structure structure);\n\tpublic void repaint();\n\tpublic void setSelection(Selection selection);\n\tpublic Selection getSelection();\n\t\n\t/** Apply this color to the current Selection\n\t * \n\t * @param red\n\t */\n\tpublic void setColor(Color red);\n\tpublic Color getColor();\n\t\n\t\n\t/** Apply this style to the current selection\n\t * \n\t * @param wireframe renderstyle\n\t */\n\tpublic void setStyle(RenderStyle wireframe);\n\t\n\t/** Clear the current display\n\t * \n\t * \n\t */\n\tpublic void clear();\n\t\n\t/** Set the Zoom level\n\t * \n\t * @param i\n\t */\n\tpublic void setZoom(int i);\n\t\n}\n","originTest":"/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage org.biojava.structure.gui;\n\nimport java.awt.Color;\nimport junit.framework.TestCase;\nimport org.biojava.bio.structure.Structure;\nimport org.biojava3.structure.gui.RenderStyle;\nimport org.biojava3.structure.gui.Selection;\nimport org.biojava3.structure.gui.StructureViewer;\n\n/**\n *\n * @author Jules\n */\npublic class StructureViewerTest extends TestCase {\n    \n    public StructureViewerTest(String testName) {\n        super(testName);\n    }\n\n    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n\n    /**\n     * Test of setStructure method, of class StructureViewer.\n     */\n    public void testSetStructure() {\n        \n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        Structure structure = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setStructure(structure);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of repaint method, of class StructureViewer.\n     */\n    public void testRepaint() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        instance.repaint();\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setSelection method, of class StructureViewer.\n     */\n    public void testSetSelection() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        Selection selection = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setSelection(selection);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of getSelection method, of class StructureViewer.\n     */\n    public void testGetSelection() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        Selection expResult = null;\n        Selection result = instance.getSelection();\n        assertEquals(expResult, result);\n        // TODO review the generated test code and remove the default call to fail.\n      //  fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setColor method, of class StructureViewer.\n     */\n    public void testSetColor() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n    \t\n        \n        Color red = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setColor(red);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of getColor method, of class StructureViewer.\n     */\n    public void testGetColor() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        Color expResult = null;\n        Color result = instance.getColor();\n        assertEquals(expResult, result);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setStyle method, of class StructureViewer.\n     */\n    public void testSetStyle() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        RenderStyle wireframe = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setStyle(wireframe);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of clear method, of class StructureViewer.\n     */\n    public void testClear() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.clear();\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setZoom method, of class StructureViewer.\n     */\n    public void testSetZoom() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        int i = 0;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setZoom(i);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    public class StructureViewerImpl implements StructureViewer {\n\n        @Override\n\t\tpublic void setStructure(Structure structure) {\n        }\n\n        @Override\n\t\tpublic void repaint() {\n        }\n\n        @Override\n\t\tpublic void setSelection(Selection selection) {\n        }\n\n        @Override\n\t\tpublic Selection getSelection() {\n            return null;\n        }\n\n        @Override\n\t\tpublic void setColor(Color red) {\n        }\n\n        @Override\n\t\tpublic Color getColor() {\n            return null;\n        }\n\n        @Override\n\t\tpublic void setStyle(RenderStyle wireframe) {\n        }\n\n        @Override\n\t\tpublic void clear() {\n        }\n\n        @Override\n\t\tpublic void setZoom(int i) {\n        }\n    }\n\n}\n","changedTest":"/*\n *                    BioJava development code\n *\n * This code may be freely distributed and modified under the\n * terms of the GNU Lesser General Public Licence.  This should\n * be distributed with the code.  If you do not have a copy,\n * see:\n *\n *      http://www.gnu.org/copyleft/lesser.html\n *\n * Copyright for this code is held jointly by the individual\n * authors.  These should be listed in @author doc comments.\n *\n * For more information on the BioJava project and its aims,\n * or to join the biojava-l mailing list, visit the home page\n * at:\n *\n *      http://www.biojava.org/\n *\n */\n/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage org.biojava.structure.gui;\n\nimport java.awt.Color;\nimport junit.framework.TestCase;\nimport org.biojava.bio.structure.Structure;\nimport org.biojava3.structure.gui.RenderStyle;\nimport org.biojava3.structure.gui.Selection;\nimport org.biojava3.structure.gui.StructureViewer;\n\n/**\n *\n * @author Jules\n */\npublic class StructureViewerTest extends TestCase {\n    \n    public StructureViewerTest(String testName) {\n        super(testName);\n    }\n\n    @Override\n    protected void setUp() throws Exception {\n        super.setUp();\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        super.tearDown();\n    }\n\n    /**\n     * Test of setStructure method, of class StructureViewer.\n     */\n    public void testSetStructure() {\n        \n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        Structure structure = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setStructure(structure);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of repaint method, of class StructureViewer.\n     */\n    public void testRepaint() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        instance.repaint();\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setSelection method, of class StructureViewer.\n     */\n    public void testSetSelection() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        Selection selection = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setSelection(selection);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of getSelection method, of class StructureViewer.\n     */\n    public void testGetSelection() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        Selection expResult = null;\n        Selection result = instance.getSelection();\n        assertEquals(expResult, result);\n        // TODO review the generated test code and remove the default call to fail.\n      //  fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setColor method, of class StructureViewer.\n     */\n    public void testSetColor() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n    \t\n        \n        Color red = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setColor(red);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of getColor method, of class StructureViewer.\n     */\n    public void testGetColor() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        StructureViewer instance = new StructureViewerImpl();\n        Color expResult = null;\n        Color result = instance.getColor();\n        assertEquals(expResult, result);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setStyle method, of class StructureViewer.\n     */\n    public void testSetStyle() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        \n        RenderStyle wireframe = null;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setStyle(wireframe);\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of clear method, of class StructureViewer.\n     */\n    public void testClear() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.clear();\n        // TODO review the generated test code and remove the default call to fail.\n        //fail(\"The test case is a prototype.\");\n    }\n\n    /**\n     * Test of setZoom method, of class StructureViewer.\n     */\n    public void testSetZoom() {\n    \tif (  java.awt.GraphicsEnvironment.isHeadless())\n    \t\treturn;\n        int i = 0;\n        StructureViewer instance = new StructureViewerImpl();\n        instance.setZoom(i);\n        // TODO review the generated test code and remove the default call to fail.\n       // fail(\"The test case is a prototype.\");\n    }\n\n    public class StructureViewerImpl implements StructureViewer {\n\n        @Override\n\t\tpublic void setStructure(Structure structure) {\n        }\n\n        @Override\n\t\tpublic void repaint() {\n        }\n\n        @Override\n\t\tpublic void setSelection(Selection selection) {\n        }\n\n        @Override\n\t\tpublic Selection getSelection() {\n            return null;\n        }\n\n        @Override\n\t\tpublic void setColor(Color red) {\n        }\n\n        @Override\n\t\tpublic Color getColor() {\n            return null;\n        }\n\n        @Override\n\t\tpublic void setStyle(RenderStyle wireframe) {\n        }\n\n        @Override\n\t\tpublic void clear() {\n        }\n\n        @Override\n\t\tpublic void setZoom(int i) {\n        }\n    }\n\n}\n","commitMessage":"Adding license statement to all java files\n","test_commitMessage":"Adding license statement to all java files\n","allZero":true}