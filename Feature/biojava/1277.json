{"repository":"biojava","prod_path":"structure/src/main/java/org/biojava/bio/structure/Site.java","test_path":"structure/src/test/java/org/biojava/bio/structure/SiteTest.java","prod_time":"2010-09-10 01:57:06","test_time":"","type":"","proType":"EDIT","add_annotation_line":0,"add_call_line":0,"add_classname_line":0,"add_condition_line":0,"add_field_line":0,"add_import_line":0,"add_packageid_line":0,"add_parameter_line":0,"add_return_line":0,"del_annotation_line":3,"del_call_line":0,"del_classname_line":0,"del_condition_line":0,"del_field_line":0,"del_import_line":0,"del_packageid_line":0,"del_parameter_line":0,"del_return_line":0,"label":"NEGATIVE","prod_commitID":"7ddd73c622b2b84201cf78d6731c79e8a4d67ef0","test_commitID":"","isfound":"not found test change","originPro":"/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage org.biojava.bio.structure;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Formatter;\nimport java.util.List;\nimport java.util.Locale;\n\n/**\n * Holds the data of sites presented in PDB files\n * Example from the PDB flatfile:\n * SITE     1 AC1  3 GLY A  65  CYS A  67  HOH A 180\n * SITE     1 AC2 10 HIS C  37  ALA C  39  THR C 152  LEU C 153\n * SITE     2 AC2 10 HIS D  37  ALA D  39  THR D 152  LEU D 153\n * SITE     3 AC2 10 SER D 154  GOL D 172\n * @author Amr AL-Hossary\n * @author Jules Jacobsen\n */\npublic class Site implements PDBRecord, Serializable {\n\n    private static final long serialVersionUID = -4577047072916341237L;\n    private static final String lineEnd =System.getProperty(\"line.separator\");\n\n    private String siteID = \"\";\n    private List<Group> groups = new ArrayList<Group>();\n    //variables for REMARK 800\n    private String evCode = \"\";\n    private String description = \"\";\n\n    public Site() {\n    }\n\n    public Site(String siteID, List<Group> groups) {\n        this.siteID = siteID;\n        this.groups = groups;\n    }\n\n    @Override\n    public String toString() {\n        StringBuilder stringBuilder = new StringBuilder(\"SITE \");\n        stringBuilder.append(siteID + \" \" + groups.size() + \" \");\n        for (Group group : groups) {\n            String groupString = String.format(\"%2s %-6s \",\n                        group.getPDBName(),\n                        group.getPDBCode());\n            stringBuilder.append(groupString);\n        }\n        stringBuilder.append(lineEnd);\n        return stringBuilder.toString();\n    }\n\n    @Override\n    public String toPDB() {\n        StringBuffer buffer = new StringBuffer();\n        toPDB(buffer);\n        return buffer.toString();\n    }\n\n    @Override\n    public void toPDB(StringBuffer buf) {\n        if (groups == null || groups.size() < 1) {\n            return;\n        }\n\n//        System.out.println(\"writing out groups:\");\n//        for (Group group : groups) {\n//            System.out.println(String.format(\" %3s %1s\",\n//                        group.getPDBName(),\n//                        group.getPDBCode()));\n//        }\n\n        //SITE     1 CAT  3 HIS H  57  ASP H 102  SER H 195\n        //SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460\n        //SITE     2 AC1  6 HOH H 464  HOH H 497\n        //         ^  ^   ^\n        //     cont# id  group size\n        //max 4 groups per line\n\n        //counters for tracking where we are\n        int seqNum = 0;\n        int groupsWritten = 0;\n        int groupNum = 0;\n        //new StringBuilder for addingthe groups to\n        StringBuffer stringBuilder = new StringBuffer();\n        Formatter form = new Formatter(stringBuilder, Locale.UK);\n        \n        while (groupsWritten < groups.size()) {\n//            stringBuilder.append(\"SITE  \");\n//            stringBuilder.append(String.format(\"SITE   %3d %3s %2d \", seqNum + 1, siteID, groups.size()));\n            StringBuilder groupsString = new StringBuilder();\n            for (int i = 0; i < 4 && groupsWritten < groups.size(); i++) {\n                Group group = groups.get(groupNum);\n                String groupString = String.format(\"%2s %-6s \",\n                        group.getPDBName(),\n                        group.getPDBCode());\n                groupsWritten++;\n                groupNum++;\n                //remove the trailing whitespace of the last element of a line\n                if (i == 3 || groupsWritten == groups.size()) {\n//                    System.out.println(\"i = \" + i +\" last element '\" + groupString + \"'\");\n                    groupString = groupString.trim();\n                }\n//                System.out.println(\"i = \" + i + \" group = '\" + groupString + \"'\");\n//                stringBuilder.append(groupString);\n                groupsString.append(groupString);\n            }\n            stringBuilder.append(String.format(\"SITE   %3d %3s %2d %-62s\", seqNum + 1, siteID, groups.size(), groupsString.toString()));\n            //iterate the line counter, add the end of line character\n            seqNum++;\n            stringBuilder.append(lineEnd);\n        }\n\n        buf.append(form.toString());\n    }\n\n    /**\n     * Appends the REMARK 800 section pertaining to the site onto the end of the\n     * StringBuffer provided.\n     *\n     * For example in pdb 1a4w:\n     * REMARK 800 SITE_IDENTIFIER: CAT\n     * REMARK 800 EVIDENCE_CODE: UNKNOWN\n     * REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n     *\n     * @param stringBuffer\n     */\n    public void remark800toPDB(StringBuffer stringBuffer) {\n        //REMARK 800 SITE_IDENTIFIER: CAT\n        //REMARK 800 EVIDENCE_CODE: UNKNOWN\n        //REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 SITE_IDENTIFIER: %-52s%s\", siteID, lineEnd));\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 EVIDENCE_CODE: %-54s%s\", evCode, lineEnd));\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 SITE_DESCRIPTION: %-51s%s\", description, lineEnd));\n\n    }\n\n    /**\n     * Privides REMARK 800 section pertaining to the site as a string.\n     *\n     * For example in pdb 1a4w:\n     * REMARK 800 SITE_IDENTIFIER: CAT\n     * REMARK 800 EVIDENCE_CODE: UNKNOWN\n     * REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n     *\n     * @param stringBuffer\n     */\n    public String remark800toPDB() {\n        StringBuffer stringBuffer = new StringBuffer();\n        remark800toPDB(stringBuffer);\n        return stringBuffer.toString();\n    }\n\n    /**\n     * @param siteID the siteID to set\n     * e.g. CAT, AC1, AC2...\n     */\n    public void setSiteID(String siteID) {\n        this.siteID = siteID;\n    }\n\n    /**\n     * @return the siteID\n     * e.g. CAT, AC1, AC2...\n     */\n    public String getSiteID() {\n        return siteID;\n    }\n\n    /**\n     * @return the groups\n     */\n    public List<Group> getGroups() {\n        return groups;\n    }\n\n    /**\n     * @param groups the groups to set\n     */\n    public void setGroups(List<Group> residues) {\n        this.groups = residues;\n    }\n\n\n    /**\n     * gets the REMARK 800 description of the site\n     * @return\n     */\n    public String getDescription() {\n        return description;\n    }\n\n    /**\n     * sets the REMARK 800 description of the site\n     */\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    /**\n     * gets the REMARK 800 EVIDENCE CODE for the site.\n     * @return\n     */\n    public String getEvCode() {\n        return evCode;\n    }\n\n    /**\n     * sets the REMARK 800 EVIDENCE CODE for the site.\n     */\n    public void setEvCode(String evCode) {\n        this.evCode = evCode;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        final Site other = (Site) obj;\n        if ((this.siteID == null) ? (other.siteID != null) : !this.siteID.equals(other.siteID)) {\n            return false;\n        }\n        if (this.groups != other.groups && (this.groups == null || !this.groups.equals(other.groups))) {\n            return false;\n        }\n        if ((this.evCode == null) ? (other.evCode != null) : !this.evCode.equals(other.evCode)) {\n            return false;\n        }\n        if ((this.description == null) ? (other.description != null) : !this.description.equals(other.description)) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 5;\n        hash = 37 * hash + (this.siteID != null ? this.siteID.hashCode() : 0);\n        hash = 37 * hash + (this.groups != null ? this.groups.hashCode() : 0);\n        hash = 37 * hash + (this.evCode != null ? this.evCode.hashCode() : 0);\n        hash = 37 * hash + (this.description != null ? this.description.hashCode() : 0);\n        return hash;\n    }\n\n\n}\n","changedPro":"/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage org.biojava.bio.structure;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Formatter;\nimport java.util.List;\nimport java.util.Locale;\n\n/**\n * Holds the data of sites presented in PDB files\n * Example from the PDB flatfile:\n * SITE     1 AC1  3 GLY A  65  CYS A  67  HOH A 180\n * SITE     1 AC2 10 HIS C  37  ALA C  39  THR C 152  LEU C 153\n * SITE     2 AC2 10 HIS D  37  ALA D  39  THR D 152  LEU D 153\n * SITE     3 AC2 10 SER D 154  GOL D 172\n * @author Amr AL-Hossary\n * @author Jules Jacobsen\n */\npublic class Site implements PDBRecord, Serializable {\n\n    private static final long serialVersionUID = -4577047072916341237L;\n    private static final String lineEnd =System.getProperty(\"line.separator\");\n\n    private String siteID = \"\";\n    private List<Group> groups = new ArrayList<Group>();\n    //variables for REMARK 800\n    private String evCode = \"\";\n    private String description = \"\";\n\n    public Site() {\n    }\n\n    public Site(String siteID, List<Group> groups) {\n        this.siteID = siteID;\n        this.groups = groups;\n    }\n\n\n    public String toString() {\n        StringBuilder stringBuilder = new StringBuilder(\"SITE \");\n        stringBuilder.append(siteID + \" \" + groups.size() + \" \");\n        for (Group group : groups) {\n            String groupString = String.format(\"%2s %-6s \",\n                        group.getPDBName(),\n                        group.getPDBCode());\n            stringBuilder.append(groupString);\n        }\n        stringBuilder.append(lineEnd);\n        return stringBuilder.toString();\n    }\n\n   \n    public String toPDB() {\n        StringBuffer buffer = new StringBuffer();\n        toPDB(buffer);\n        return buffer.toString();\n    }\n\n\n    public void toPDB(StringBuffer buf) {\n        if (groups == null || groups.size() < 1) {\n            return;\n        }\n\n//        System.out.println(\"writing out groups:\");\n//        for (Group group : groups) {\n//            System.out.println(String.format(\" %3s %1s\",\n//                        group.getPDBName(),\n//                        group.getPDBCode()));\n//        }\n\n        //SITE     1 CAT  3 HIS H  57  ASP H 102  SER H 195\n        //SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460\n        //SITE     2 AC1  6 HOH H 464  HOH H 497\n        //         ^  ^   ^\n        //     cont# id  group size\n        //max 4 groups per line\n\n        //counters for tracking where we are\n        int seqNum = 0;\n        int groupsWritten = 0;\n        int groupNum = 0;\n        //new StringBuilder for addingthe groups to\n        StringBuffer stringBuilder = new StringBuffer();\n        Formatter form = new Formatter(stringBuilder, Locale.UK);\n        \n        while (groupsWritten < groups.size()) {\n//            stringBuilder.append(\"SITE  \");\n//            stringBuilder.append(String.format(\"SITE   %3d %3s %2d \", seqNum + 1, siteID, groups.size()));\n            StringBuilder groupsString = new StringBuilder();\n            for (int i = 0; i < 4 && groupsWritten < groups.size(); i++) {\n                Group group = groups.get(groupNum);\n                String groupString = String.format(\"%2s %-6s \",\n                        group.getPDBName(),\n                        group.getPDBCode());\n                groupsWritten++;\n                groupNum++;\n                //remove the trailing whitespace of the last element of a line\n                if (i == 3 || groupsWritten == groups.size()) {\n//                    System.out.println(\"i = \" + i +\" last element '\" + groupString + \"'\");\n                    groupString = groupString.trim();\n                }\n//                System.out.println(\"i = \" + i + \" group = '\" + groupString + \"'\");\n//                stringBuilder.append(groupString);\n                groupsString.append(groupString);\n            }\n            stringBuilder.append(String.format(\"SITE   %3d %3s %2d %-62s\", seqNum + 1, siteID, groups.size(), groupsString.toString()));\n            //iterate the line counter, add the end of line character\n            seqNum++;\n            stringBuilder.append(lineEnd);\n        }\n\n        buf.append(form.toString());\n    }\n\n    /**\n     * Appends the REMARK 800 section pertaining to the site onto the end of the\n     * StringBuffer provided.\n     *\n     * For example in pdb 1a4w:\n     * REMARK 800 SITE_IDENTIFIER: CAT\n     * REMARK 800 EVIDENCE_CODE: UNKNOWN\n     * REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n     *\n     * @param stringBuffer\n     */\n    public void remark800toPDB(StringBuffer stringBuffer) {\n        //REMARK 800 SITE_IDENTIFIER: CAT\n        //REMARK 800 EVIDENCE_CODE: UNKNOWN\n        //REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 SITE_IDENTIFIER: %-52s%s\", siteID, lineEnd));\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 EVIDENCE_CODE: %-54s%s\", evCode, lineEnd));\n        stringBuffer.append(String.format(Locale.UK, \"REMARK 800 SITE_DESCRIPTION: %-51s%s\", description, lineEnd));\n\n    }\n\n    /**\n     * Provides REMARK 800 section pertaining to the site as a string.\n     *\n     * For example in pdb 1a4w:\n     * REMARK 800 SITE_IDENTIFIER: CAT\n     * REMARK 800 EVIDENCE_CODE: UNKNOWN\n     * REMARK 800 SITE_DESCRIPTION: ACTIVE SITE\n     *\n     * \n     */\n    public String remark800toPDB() {\n        StringBuffer stringBuffer = new StringBuffer();\n        remark800toPDB(stringBuffer);\n        return stringBuffer.toString();\n    }\n\n    /**\n     * @param siteID the siteID to set\n     * e.g. CAT, AC1, AC2...\n     */\n    public void setSiteID(String siteID) {\n        this.siteID = siteID;\n    }\n\n    /**\n     * @return the siteID\n     * e.g. CAT, AC1, AC2...\n     */\n    public String getSiteID() {\n        return siteID;\n    }\n\n    /**\n     * @return the groups\n     */\n    public List<Group> getGroups() {\n        return groups;\n    }\n\n    /**\n     * @param residues the groups to set\n     */\n    public void setGroups(List<Group> residues) {\n        this.groups = residues;\n    }\n\n\n    /**\n     * gets the REMARK 800 description of the site\n     * @return description\n     */\n    public String getDescription() {\n        return description;\n    }\n\n    /**\n     * sets the REMARK 800 description of the site\n     */\n    public void setDescription(String description) {\n        this.description = description;\n    }\n\n    /**\n     * gets the REMARK 800 EVIDENCE CODE for the site.\n     * @return evidence code\n     */\n    public String getEvCode() {\n        return evCode;\n    }\n\n    /**\n     * sets the REMARK 800 EVIDENCE CODE for the site.\n     */\n    public void setEvCode(String evCode) {\n        this.evCode = evCode;\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        if (obj == null) {\n            return false;\n        }\n        if (getClass() != obj.getClass()) {\n            return false;\n        }\n        final Site other = (Site) obj;\n        if ((this.siteID == null) ? (other.siteID != null) : !this.siteID.equals(other.siteID)) {\n            return false;\n        }\n        if (this.groups != other.groups && (this.groups == null || !this.groups.equals(other.groups))) {\n            return false;\n        }\n        if ((this.evCode == null) ? (other.evCode != null) : !this.evCode.equals(other.evCode)) {\n            return false;\n        }\n        if ((this.description == null) ? (other.description != null) : !this.description.equals(other.description)) {\n            return false;\n        }\n        return true;\n    }\n\n    @Override\n    public int hashCode() {\n        int hash = 5;\n        hash = 37 * hash + (this.siteID != null ? this.siteID.hashCode() : 0);\n        hash = 37 * hash + (this.groups != null ? this.groups.hashCode() : 0);\n        hash = 37 * hash + (this.evCode != null ? this.evCode.hashCode() : 0);\n        hash = 37 * hash + (this.description != null ? this.description.hashCode() : 0);\n        return hash;\n    }\n\n\n}\n","originTest":"/*\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\n\npackage org.biojava.bio.structure;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.biojava.bio.structure.io.PDBParseException;\nimport org.junit.After;\nimport org.junit.AfterClass;\nimport org.junit.Before;\nimport org.junit.BeforeClass;\nimport org.junit.Test;\nimport static org.junit.Assert.*;\n\n/**\n * Tests functionality of Site class.\n * @author Jules Jacobsen <jacobsen@ebi.ac.uk>\n */\npublic class SiteTest {\n\n    public static final String newline = System.getProperty(\"line.separator\");\n\n    private static Site catSite;\n    private static Site bindingSite;\n\n    private static List<Group> bindingSiteGroups;\n\n    public SiteTest() {\n        try {\n            // sites CAT and AC1 from PDB entry 1a4w\n            //SITE     1 CAT  3 HIS H  57  ASP H 102  SER H 195\n            //SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460\n            //SITE     2 AC1  6 HOH H 464  HOH H 497\n            //groups for site CAT\n            Group his57 = new AminoAcidImpl();\n            his57.setPDBCode(\"H  57\");\n            his57.setPDBName(\"HIS\");\n            Group asp102 = new AminoAcidImpl();\n            asp102.setPDBCode(\"H 102\");\n            asp102.setPDBName(\"ASP\");\n            Group ser195 = new AminoAcidImpl();\n            ser195.setPDBCode(\"H 195\");\n            ser195.setPDBName(\"SER\");\n            List<Group> catSiteGroups = new ArrayList<Group>();\n            catSiteGroups.add(his57);\n            catSiteGroups.add(asp102);\n            catSiteGroups.add(ser195);\n            //make the catalytic site CAT\n            catSite = new Site();\n            catSite.setSiteID(\"CAT\");\n            catSite.setGroups(catSiteGroups);\n            catSite.setEvCode(\"UNKNOWN\");\n            catSite.setDescription(\"ACTIVE SITE\");\n            //groups for site AC1\n            Group arg221a = new AminoAcidImpl();\n            arg221a.setPDBCode(\"H 221A\");\n            arg221a.setPDBName(\"ARG\");\n            Group lys224 = new AminoAcidImpl();\n            lys224.setPDBCode(\"H 224\");\n            lys224.setPDBName(\"LYS\");\n            Group hoh403 = new HetatomImpl();\n            hoh403.setPDBCode(\"H 403\");\n            hoh403.setPDBName(\"HOH\");\n            Group hoh460 = new HetatomImpl();\n            hoh460.setPDBCode(\"H 460\");\n            hoh460.setPDBName(\"HOH\");\n            Group hoh464 = new HetatomImpl();\n            hoh464.setPDBCode(\"H 464\");\n            hoh464.setPDBName(\"HOH\");\n            Group hoh497 = new HetatomImpl();\n            hoh497.setPDBCode(\"H 497\");\n            hoh497.setPDBName(\"HOH\");\n\n            bindingSiteGroups = new ArrayList<Group>();\n            \n            bindingSiteGroups.add(arg221a);\n            bindingSiteGroups.add(lys224);\n            bindingSiteGroups.add(hoh403);\n            bindingSiteGroups.add(hoh460);\n            bindingSiteGroups.add(hoh464);\n            bindingSiteGroups.add(hoh497);\n            //make the binding site AC1\n            bindingSite = new Site();\n            bindingSite.setSiteID(\"AC1\");\n            bindingSite.setGroups(bindingSiteGroups);\n            bindingSite.setEvCode(\"SOFTWARE\");\n            bindingSite.setDescription(\"BINDING SITE FOR RESIDUE NA H 541\");\n\n        } catch (PDBParseException ex) {\n            Logger.getLogger(SiteTest.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }\n\n    @BeforeClass\n    public static void setUpClass() throws Exception {\n    }\n\n    @AfterClass\n    public static void tearDownClass() throws Exception {\n    }\n\n    @Before\n    public void setUp() {\n    }\n\n    @After\n    public void tearDown() {\n    }\n\n    /**\n     * Test of toPDB method, of class Site.\n     */\n    @Test\n    public void testToPDB_0args() {\n//        System.out.println(\"toPDB_0args\");\n        String expResult =  \"SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460                    \" + newline +\n                            \"SITE     2 AC1  6 HOH H 464  HOH H 497                                          \"+ newline;\n        String result = bindingSite.toPDB();\n//        System.out.println(result);\n        assertEquals(expResult, result);\n    }\n\n    /**\n     * Test of toPDB method, of class Site.\n     */\n    @Test\n    public void testToPDB_StringBuffer() {\n//        System.out.println(\"toPDB\");\n        StringBuffer buf = new StringBuffer(\"\");\n        String expResult =  \"SITE     1 AC1  6 ARG H 221A LYS H 224  HOH H 403  HOH H 460                    \" + newline +\n                            \"SITE     2 AC1  6 HOH H 464  HOH H 497                                          \"+ newline;\n        bindingSite.toPDB(buf);\n        String result = buf.toString();\n//        System.out.println(result);\n        assertEquals(expResult, result);\n    }\n\n\n        /**\n     * Test of toPDB method, of class Site.\n     */\n    @Test\n    public void testRemark800ToPDB_0args() {\n//        System.out.println(\"remark800toPDB_0args\");\n        String expResult =  \"REMARK 800 SITE_IDENTIFIER: CAT                                                 \" + newline +\n                            \"REMARK 800 EVIDENCE_CODE: UNKNOWN                                               \" + newline +\n                            \"REMARK 800 SITE_DESCRIPTION: ACTIVE SITE                                        \" + newline;\n        String result = catSite.remark800toPDB();\n//        System.out.println(result);\n        assertEquals(expResult, result);\n    }\n\n    /**\n     * Test of toPDB method, of class Site.\n     */\n    @Test\n    public void testRemark800ToPDB_StringBuffer() {\n//        System.out.println(\"remark800toPDB\");\n        StringBuffer buf = new StringBuffer(\"\");\n        String expResult =  \"REMARK 800 SITE_IDENTIFIER: CAT                                                 \" + newline +\n                            \"REMARK 800 EVIDENCE_CODE: UNKNOWN                                               \" + newline +\n                            \"REMARK 800 SITE_DESCRIPTION: ACTIVE SITE                                        \" + newline;\n        catSite.remark800toPDB(buf);\n        String result = buf.toString();\n//        System.out.println(result);\n        assertEquals(expResult, result);\n    }\n\n\n\n    /**\n     * Test of getSiteID method, of class Site.\n     */\n    @Test\n    public void testGetSiteID() {\n//        System.out.println(\"getSiteID\");\n        String expResult = \"CAT\";\n        String result = catSite.getSiteID();\n        assertEquals(expResult, result);\n    }\n\n    /**\n     * Test of getGroups method, of class Site.\n     */\n    @Test\n    public void testGetResidues() {\n//        System.out.println(\"getGroups\");\n        List expResult = bindingSiteGroups;\n        List result = bindingSite.getGroups();\n        assertEquals(expResult, result);\n    }\n\n}","changedTest":"","commitMessage":"fixing javadocs and @Override statements\n\ngit-svn-id: http://code.open-bio.org/repos/biojava/biojava-live/trunk@8231 7c6358e6-4a41-0410-a743-a5b2a554c398\n","test_commitMessage":"","allZero":false}