{"repository":"biojava","prod_path":"biojava3-sequencing/src/main/java/org/biojava3/sequencing/io/fastq/IlluminaFastqWriter.java","test_path":"biojava3-sequencing/src/test/java/org/biojava3/sequencing/io/fastq/IlluminaFastqWriterTest.java","prod_time":"2012-02-27 06:59:31","test_time":"2012-02-27 06:59:31","type":"EDIT","proType":"EDIT","add_annotation_line":1,"add_call_line":1,"add_classname_line":1,"add_condition_line":2,"add_field_line":0,"add_import_line":0,"add_packageid_line":0,"add_parameter_line":1,"add_return_line":0,"del_annotation_line":0,"del_call_line":1,"del_classname_line":2,"del_condition_line":2,"del_field_line":0,"del_import_line":0,"del_packageid_line":0,"del_parameter_line":1,"del_return_line":0,"label":"POSITIVE","prod_commitID":"bd565ee3c906c1aa53135e58c797d5162117d1ad","test_commitID":"bd565ee3c906c1aa53135e58c797d5162117d1ad","isfound":"found test change","originPro":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava3.sequencing.io.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Writer for {@link FastqVariant#FASTQ_ILLUMINA} formatted sequences.\r\n *\r\n * @since 3.0.3\r\n */\r\npublic final class IlluminaFastqWriter\r\n    extends AbstractFastqWriter\r\n{\r\n\r\n    /** {@inheritDoc} */\r\n    protected void validate(final Fastq fastq) throws IOException\r\n    {\r\n        if (fastq == null)\r\n        {\r\n            return;\r\n        }\r\n        if (!fastq.getVariant().isIllumina())\r\n        {\r\n            throw new IOException(\"sequence \" + fastq.getDescription()\r\n                                  + \" not fastq-illumina format, was \" + fastq.getVariant().lowercaseName());\r\n        }\r\n    }\r\n}","changedPro":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava3.sequencing.io.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Writer for {@link FastqVariant#FASTQ_ILLUMINA} formatted sequences.\r\n *\r\n * @since 3.0.3\r\n */\r\npublic final class IlluminaFastqWriter extends AbstractFastqWriter {\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    @Override\r\n    protected void validate(final Fastq fastq) throws IOException {\r\n        if (fastq == null) {\r\n            return;\r\n        }\r\n        if (!fastq.getVariant().isIllumina()) {\r\n            throw new IOException(\"sequence \" + fastq.getDescription()\r\n                    + \" not fastq-illumina format, was \" + fastq.getVariant().lowercaseName());\r\n        }\r\n    }\r\n}","originTest":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava3.sequencing.io.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Unit test for IlluminaFastqWriter.\r\n */\r\npublic final class IlluminaFastqWriterTest\r\n    extends AbstractFastqWriterTest\r\n{\r\n\r\n    /** {@inheritDoc} */\r\n    public FastqWriter createFastqWriter()\r\n    {\r\n        return new IlluminaFastqWriter();\r\n    }\r\n\r\n    /** {@inheritDoc} */\r\n    public Fastq createFastq()\r\n    {\r\n        return new FastqBuilder()\r\n            .withDescription(\"description\")\r\n            .withSequence(\"sequence\")\r\n            .withQuality(\"quality_\")\r\n            .withVariant(FastqVariant.FASTQ_ILLUMINA)\r\n            .build();\r\n    }\r\n\r\n    public void testValidateNotIlluminaVariant()\r\n    {\r\n        IlluminaFastqWriter writer = new IlluminaFastqWriter();\r\n        Appendable appendable = new StringBuilder();\r\n        Fastq invalid = new FastqBuilder()\r\n            .withDescription(\"description\")\r\n            .withSequence(\"sequence\")\r\n            .withQuality(\"quality_\")\r\n            .withVariant(FastqVariant.FASTQ_SANGER)\r\n            .build();\r\n        try\r\n        {\r\n            writer.append(appendable, invalid);\r\n            fail(\"validate not fastq-illumina variant expected IOException\");\r\n        }\r\n        catch (IOException e)\r\n        {\r\n            // expected\r\n        }\r\n    }\r\n}","changedTest":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava3.sequencing.io.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Unit test for IlluminaFastqWriter.\r\n */\r\npublic final class IlluminaFastqWriterTest extends AbstractFastqWriterTest {\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    public FastqWriter createFastqWriter() {\r\n        return new IlluminaFastqWriter();\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    public Fastq createFastq() {\r\n        return new FastqBuilder().withDescription(\"description\").withSequence(\"sequence\").withQuality(\"quality_\").withVariant(FastqVariant.FASTQ_ILLUMINA).build();\r\n    }\r\n\r\n    public void testValidateNotIlluminaVariant() {\r\n        IlluminaFastqWriter writer = new IlluminaFastqWriter();\r\n        Appendable appendable = new StringBuilder();\r\n        Fastq invalid = new FastqBuilder().withDescription(\"description\").withSequence(\"sequence\").withQuality(\"quality_\").withVariant(FastqVariant.FASTQ_SANGER).build();\r\n        try {\r\n            writer.append(appendable, invalid);\r\n            fail(\"validate not fastq-illumina variant expected IOException\");\r\n        } catch (IOException e) {\r\n            // expected\r\n        }\r\n    }\r\n}","commitMessage":"implemented a new Fastq Reader/Writer for the new Illumina Fastq Formatting (according to Wikipedia it's version 1.8, new this month\nextended the Fastq class to be able to generate DNASequence representations with the Quality (as Phred Numbers) added as Feature\nextended the Fastq class to have a contructor that accepts a DNASequence\nsome test cases\ncode formatting\n\ngit-svn-id: http://code.open-bio.org/repos/biojava/biojava-live/trunk@9545 7c6358e6-4a41-0410-a743-a5b2a554c398\n","test_commitMessage":"implemented a new Fastq Reader/Writer for the new Illumina Fastq Formatting (according to Wikipedia it's version 1.8, new this month\nextended the Fastq class to be able to generate DNASequence representations with the Quality (as Phred Numbers) added as Feature\nextended the Fastq class to have a contructor that accepts a DNASequence\nsome test cases\ncode formatting\n\ngit-svn-id: http://code.open-bio.org/repos/biojava/biojava-live/trunk@9545 7c6358e6-4a41-0410-a743-a5b2a554c398\n","allZero":false}