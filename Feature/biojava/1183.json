{"repository":"biojava","prod_path":"sequencing/src/main/java/org/biojava/bio/program/fastq/SangerFastqWriter.java","test_path":"sequencing/src/test/java/org/biojava/bio/program/fastq/SangerFastqWriterTest.java","prod_time":"2010-01-18 15:23:26","test_time":"","type":"","proType":"EDIT","add_annotation_line":0,"add_call_line":0,"add_classname_line":0,"add_condition_line":0,"add_field_line":0,"add_import_line":0,"add_packageid_line":0,"add_parameter_line":0,"add_return_line":0,"del_annotation_line":0,"del_call_line":0,"del_classname_line":0,"del_condition_line":0,"del_field_line":0,"del_import_line":0,"del_packageid_line":0,"del_parameter_line":0,"del_return_line":0,"label":"NEGATIVE","prod_commitID":"9b907127c257838b27342a1f528bacb7012f996a","test_commitID":"","isfound":"not found test change","originPro":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava.bio.program.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Writer for {@link FastqVariant#FASTQ_SANGER} formatted sequences.\r\n */\r\npublic final class SangerFastqWriter\r\n    extends AbstractFastqWriter\r\n{\r\n\r\n    /** {@inheritDoc} */\r\n    protected void validate(final Fastq fastq) throws IOException\r\n    {\r\n        if (fastq == null)\r\n        {\r\n            return;\r\n        }\r\n        if (!fastq.getVariant().isSanger())\r\n        {\r\n            throw new IOException(\"sequence \" + fastq.getDescription()\r\n                                  + \" not fastq-sanger format, was \" + fastq.getVariant().lowercaseName());\r\n        }\r\n    }\r\n}","changedPro":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava.bio.program.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Writer for {@link FastqVariant#FASTQ_SANGER} formatted sequences.\r\n *\r\n * @since 1.7.1\r\n */\r\npublic final class SangerFastqWriter\r\n    extends AbstractFastqWriter\r\n{\r\n\r\n    /** {@inheritDoc} */\r\n    protected void validate(final Fastq fastq) throws IOException\r\n    {\r\n        if (fastq == null)\r\n        {\r\n            return;\r\n        }\r\n        if (!fastq.getVariant().isSanger())\r\n        {\r\n            throw new IOException(\"sequence \" + fastq.getDescription()\r\n                                  + \" not fastq-sanger format, was \" + fastq.getVariant().lowercaseName());\r\n        }\r\n    }\r\n}","originTest":"/*\r\n *                    BioJava development code\r\n *\r\n * This code may be freely distributed and modified under the\r\n * terms of the GNU Lesser General Public Licence.  This should\r\n * be distributed with the code.  If you do not have a copy,\r\n * see:\r\n *\r\n *      http://www.gnu.org/copyleft/lesser.html\r\n *\r\n * Copyright for this code is held jointly by the individual\r\n * authors.  These should be listed in @author doc comments.\r\n *\r\n * For more information on the BioJava project and its aims,\r\n * or to join the biojava-l mailing list, visit the home page\r\n * at:\r\n *\r\n *      http://www.biojava.org/\r\n *\r\n */\r\npackage org.biojava.bio.program.fastq;\r\n\r\nimport java.io.IOException;\r\n\r\n/**\r\n * Unit test for SangerFastqWriter.\r\n */\r\npublic final class SangerFastqWriterTest\r\n    extends AbstractFastqWriterTest\r\n{\r\n\r\n    /** {@inheritDoc} */\r\n    protected FastqWriter createFastqWriter()\r\n    {\r\n        return new SangerFastqWriter();\r\n    }\r\n\r\n    /** {@inheritDoc} */\r\n    protected Fastq createFastq()\r\n    {\r\n        return new FastqBuilder()\r\n            .withDescription(\"description\")\r\n            .withSequence(\"sequence\")\r\n            .withQuality(\"quality_\")\r\n            .withVariant(FastqVariant.FASTQ_SANGER)\r\n            .build();\r\n    }\r\n\r\n    public void testValidateNotSangerVariant()\r\n    {\r\n        SangerFastqWriter writer = new SangerFastqWriter();\r\n        Appendable appendable = new StringBuilder();\r\n        Fastq invalid = new FastqBuilder()\r\n            .withDescription(\"description\")\r\n            .withSequence(\"sequence\")\r\n            .withQuality(\"quality_\")\r\n            .withVariant(FastqVariant.FASTQ_SOLEXA)\r\n            .build();\r\n        try\r\n        {\r\n            writer.append(appendable, invalid);\r\n            fail(\"validate not fastq-sanger variant expected IOException\");\r\n        }\r\n        catch (IOException e)\r\n        {\r\n            // expected\r\n        }\r\n    }\r\n}","changedTest":"","commitMessage":"adding @since 1.7.1 javadoc tags\n\ngit-svn-id: http://code.open-bio.org/repos/biojava/biojava-live/trunk@7297 7c6358e6-4a41-0410-a743-a5b2a554c398\n","test_commitMessage":"","allZero":true}